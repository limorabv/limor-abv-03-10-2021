[{"/Users/limorelayev/Desktop/weather/src/index.js":"1","/Users/limorelayev/Desktop/weather/src/App.js":"2","/Users/limorelayev/Desktop/weather/src/components/MainHeader.js":"3","/Users/limorelayev/Desktop/weather/src/pages/Home.js":"4","/Users/limorelayev/Desktop/weather/src/pages/Favorites.js":"5","/Users/limorelayev/Desktop/weather/src/components/CurrentCity.js":"6","/Users/limorelayev/Desktop/weather/src/store/index.js":"7","/Users/limorelayev/Desktop/weather/src/components/Forcast.js":"8","/Users/limorelayev/Desktop/weather/src/components/ToggleFavoriteButton.js":"9","/Users/limorelayev/Desktop/weather/src/utils.js":"10","/Users/limorelayev/Desktop/weather/src/UI/Card.js":"11","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/index.js":"12","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/App.js":"13","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/store/index.js":"14","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/pages/Home.js":"15","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/components/CurrentCity.js":"16","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/pages/Favorites.js":"17","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/components/MainHeader.js":"18","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/components/Forcast.js":"19","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/utils.js":"20","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/UI/Card.js":"21"},{"size":384,"mtime":1633265480239,"results":"22","hashOfConfig":"23"},{"size":623,"mtime":1633376512632,"results":"24","hashOfConfig":"23"},{"size":568,"mtime":1633262833819,"results":"25","hashOfConfig":"23"},{"size":184,"mtime":1633436868384,"results":"26","hashOfConfig":"23"},{"size":876,"mtime":1633435422208,"results":"27","hashOfConfig":"23"},{"size":5489,"mtime":1633440174387,"results":"28","hashOfConfig":"23"},{"size":1526,"mtime":1633430186846,"results":"29","hashOfConfig":"23"},{"size":1852,"mtime":1633437638767,"results":"30","hashOfConfig":"23"},{"size":275,"mtime":1633367745203,"results":"31","hashOfConfig":"23"},{"size":56,"mtime":1633429180600,"results":"32","hashOfConfig":"23"},{"size":176,"mtime":1633417816022,"results":"33","hashOfConfig":"23"},{"size":416,"mtime":1633524536615,"results":"34","hashOfConfig":"35"},{"size":623,"mtime":1633527222152,"results":"36","hashOfConfig":"35"},{"size":1515,"mtime":1633502149370,"results":"37","hashOfConfig":"35"},{"size":184,"mtime":1633436868384,"results":"38","hashOfConfig":"35"},{"size":5477,"mtime":1633524532806,"results":"39","hashOfConfig":"35"},{"size":876,"mtime":1633435422208,"results":"40","hashOfConfig":"35"},{"size":568,"mtime":1633524523745,"results":"41","hashOfConfig":"35"},{"size":1852,"mtime":1633526417498,"results":"42","hashOfConfig":"35"},{"size":57,"mtime":1633588358669,"results":"43","hashOfConfig":"35"},{"size":176,"mtime":1633417816022,"results":"44","hashOfConfig":"35"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"9qgv2g",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"hlrpfr",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/limorelayev/Desktop/weather/src/index.js",[],["91","92"],"/Users/limorelayev/Desktop/weather/src/App.js",[],"/Users/limorelayev/Desktop/weather/src/components/MainHeader.js",[],"/Users/limorelayev/Desktop/weather/src/pages/Home.js",[],"/Users/limorelayev/Desktop/weather/src/pages/Favorites.js",[],"/Users/limorelayev/Desktop/weather/src/components/CurrentCity.js",["93","94","95"],"/Users/limorelayev/Desktop/weather/src/store/index.js",[],"/Users/limorelayev/Desktop/weather/src/components/Forcast.js",["96"],"import { useState, useEffect } from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { KEY } from '../utils'\nimport Card from '../UI/Card';\nimport './Forcast.css';\n\n\n\nconst Forcast = (props) => {\n    const [forcast, setForcast] = useState([]);\n\n    const fetchForcast = async (cityId) =>{\n        try {const forcastResponse = await fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityId}?apikey=${KEY}`);\n        const forcastData = await forcastResponse.json();\n        setForcast (forcastData.DailyForecasts);\n    } catch (error) {\n        toast.error('faild to load forcast');\n\n    }\n    }\n\n    const parseDate = (dateString) => {\n        const date = new Date (Date.parse(dateString));\n        console.log(Date.parse(dateString));\n\n        const dateObject = new Date(Date.UTC(dateString+''));\n        console.log('parse date' + dateObject);\n        return (date.toLocaleString('en-US', {weekday: 'short'}));\n\n    }\n\n    useEffect( () => {\n        fetchForcast(props.cityId);\n    }, [props.cityId])\n\n\n\n   return (\n        <ul className = 'forcast-list'>\n            {forcast.map ((forcastItem) => \n                    <Card className = 'forcast-item'>\n                        <li key = {new Date(Date.UTC(forcastItem.EpochDate))}> \n                            <p>{parseDate(forcastItem.Date)}</p>\n                            <p>{forcastItem.Temperature.Minimum.Value}<span>&#176;F</span></p>\n                            <img src = {`https://developer.accuweather.com/sites/default/files/${String(forcastItem.Day.Icon).padStart(2, '0')\n}-s.png`}></img>\n                            <p>{forcastItem.Day.IconPhrase}</p>\n                         \n                        </li>\n                    </Card>\n                        )}\n        </ul>\n    )\n}\n\nexport default Forcast;","/Users/limorelayev/Desktop/weather/src/components/ToggleFavoriteButton.js",[],"/Users/limorelayev/Desktop/weather/src/utils.js",[],"/Users/limorelayev/Desktop/weather/src/UI/Card.js",[],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/index.js",[],["97","98"],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/App.js",[],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/store/index.js",[],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/pages/Home.js",[],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/components/CurrentCity.js",["99","100"],"import { useSelector } from 'react-redux';\nimport { currentCityActions, favoritesActions } from '../store/index';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Forcast from './Forcast';\nimport { Fragment } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { KEY } from '../utils';\nimport Card from '../UI/Card';\nimport './CurrentCity.css';\n\n\ntoast.configure();\n\nconst CurrenCity = () => {\n    const dispatch = useDispatch();\n    const currentCityName = useSelector(state => state.currentCity.cityName);\n    const currentWeather = useSelector(state => state.currentCity.currWeather);\n    const currCityId = useSelector(state => state.currentCity.cityId);\n    const favorites = useSelector( state => state.favorites.favList);\n    const params = useParams();\n    const history = useHistory();\n\n  \n    \n    let isFavorite = favorites.find( favorite => favorite.id === currCityId);\n\n    const searchClickedHandler = (e) => {\n        const searchedName = document.querySelector('#city-input').value;\n        history.push(`/city/${searchedName}`)\n      \n    }\n\n    const addFavoriteHandler = () => {\n        dispatch(favoritesActions.addFavorite({ name: currentCityName, id: currCityId, currentWeather: currentWeather.weatherText, currentTemp: currentWeather.temperature.imperial}))\n    }\n\n    const removeFavoriteHandler = () => {\n        dispatch( favoritesActions.removeFavorite(currCityId));\n    }\n\n    const fetchCity = async (name) => {\n        console.log(\"inside fetch city\");\n        try {\n            const currCityResponse = await fetch(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete/?apikey=${KEY}&q=${name}`);\n            const currCityJson = await currCityResponse.json();\n            const cityId = currCityJson[0].Key;\n\n            const cityName = currCityJson[0].LocalizedName;\n            dispatch(currentCityActions.updateCurrentCity({cityName, cityId: cityId}));\n        } catch (error){\n            toast.error('city search faild');\n            console.log('city search faild');\n        }\n    }\n\n    const fetchCurrWeather = async (cityId) => {\n\n        try { \n\n            const currWeatherResponse = await fetch (`https://dataservice.accuweather.com/currentconditions/v1/${currCityId}?apikey=${KEY}`);\n            const currentWeatherJson = await currWeatherResponse.json();\n            dispatch (currentCityActions.updateCurrentWeather({\n                weatherText: currentWeatherJson[0].WeatherText,\n                weatherIcon: currentWeatherJson[0].WeatherIcon, \n                imperial: currentWeatherJson[0].Temperature.Imperial.Value, \n                metric: currentWeatherJson[0].Temperature.Metric.Value\n        }));\n        } catch (error) {\n            toast.error('failed fetching weather');\n            console.log ('failed fetching weather');\n        }\n    }\n\n    const success = async (position) => {\n        try {const latitude  = position.coords.latitude;\n        const longitude = position.coords.longitude;\n        console.log(`lat: ${latitude}, lon: ${longitude}`);\n        const cityResponse = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?q=${latitude},${longitude}&apikey=${KEY}`)\n        const cityJson = await cityResponse.json();\n        console.log(cityJson);\n        const cityName = cityJson.LocalizedName;\n        const cityId = cityJson.Key;\n        console.log(`from sucsses func id: ${cityId}`);\n        dispatch(currentCityActions.updateCurrentCity({cityName:cityName , cityId: cityId}))\n    } catch (error){\n        console.log(error);\n        toast.error('error');\n    }\n    }\n    \n\n    if (params.name) {\n        fetchCity(params.name);\n    }\n    else {\n        if('geolocation' in navigator) {\n            /* geolocation is available */\n            navigator.geolocation.getCurrentPosition(success, () => {fetchCity('Tel Aviv')})\n          }\n    }\n\n    useEffect (() => {\n        console.log('inside use effect:' + currCityId );\n        const fetchData = async () => {\n            await fetchCurrWeather (currCityId);\n\n        }\n        fetchData();\n    }, [currentCityName, currCityId]);\n\n    console.log(currCityId);\n    \n\n\n    \n    return (\n    <Fragment>\n        <form onSubmit = { (e) => {e.preventDefault()}}> \n            <div className = 'input-container'>\n                <input type=\"search\" id = 'city-input'/>\n                <button type=\"submit\" onClick = { searchClickedHandler } > Search </button>\n            </div>\n        </form>\n        <Card className = 'city'>\n            { currentCityName &&<div>\n            <h2 class = 'city-title'>{currentCityName}</h2>\n            {console.log(currentWeather.temperature)}\n            {currentWeather && <h2>{currentWeather.temperature.imperial}<span>&#176;F</span></h2>}\n            {currentWeather && <h3>{ currentWeather.weatherText }</h3>}\n            <img src = {`https://developer.accuweather.com/sites/default/files/${String(currentWeather.weatherIcon).padStart(2, '0')\n}-s.png`}/>\n            < Forcast cityId = { currCityId } />\n            \n\n            <button className = 'fav-btn ' class=\"btn btn-success\"onClick = { isFavorite ? removeFavoriteHandler : addFavoriteHandler }>{isFavorite ? 'Remove Favorite': 'Add Favorite'}</button>\n            </div>}\n        </Card>\n    </Fragment>\n    );\n  };\n  \n  export default CurrenCity;","/Users/limorelayev/Desktop/weather back bug fixed/weather/src/pages/Favorites.js",[],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/components/MainHeader.js",[],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/components/Forcast.js",["101"],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/utils.js",[],"/Users/limorelayev/Desktop/weather back bug fixed/weather/src/UI/Card.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":77,"column":11,"nodeType":"108","messageId":"109","endLine":77,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":112,"column":8,"nodeType":"112","endLine":112,"endColumn":37,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":133,"column":13,"nodeType":"116","endLine":134,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":46,"column":29,"nodeType":"116","endLine":47,"endColumn":11},{"ruleId":"102","replacedBy":"117"},{"ruleId":"104","replacedBy":"118"},{"ruleId":"110","severity":1,"message":"111","line":112,"column":8,"nodeType":"112","endLine":112,"endColumn":37,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"115","line":133,"column":13,"nodeType":"116","endLine":134,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":46,"column":29,"nodeType":"116","endLine":47,"endColumn":11},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'success' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchCurrWeather'. Either include it or remove the dependency array.","ArrayExpression",["122"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["120"],["121"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"124","fix":"126"},"Update the dependencies array to be: [currentCityName, currCityId, fetchCurrWeather]",{"range":"127","text":"128"},{"range":"129","text":"128"},[4237,4266],"[currentCityName, currCityId, fetchCurrWeather]",[4231,4260]]